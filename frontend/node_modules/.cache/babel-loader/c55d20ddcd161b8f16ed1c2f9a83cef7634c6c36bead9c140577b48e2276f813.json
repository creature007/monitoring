{"ast":null,"code":"import { computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'Statistics',\n  setup() {\n    const store = useStore();\n    const statistics = computed(() => store.state.statistics);\n    const chartData = computed(() => ({\n      labels: ['Online', 'Offline'],\n      datasets: [{\n        data: [statistics.value?.online_devices || 0, statistics.value?.offline_devices || 0],\n        backgroundColor: ['#4caf50', '#f44336'],\n        hoverBackgroundColor: ['#66bb6a', '#ef5350']\n      }]\n    }));\n    const chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      cutout: '60%',\n      plugins: {\n        legend: {\n          position: 'bottom'\n        }\n      }\n    };\n    onMounted(() => {\n      store.dispatch('fetchStatistics');\n    });\n    return {\n      statistics,\n      chartData,\n      chartOptions\n    };\n  }\n};","map":{"version":3,"names":["computed","onMounted","useStore","name","setup","store","statistics","state","chartData","labels","datasets","data","value","online_devices","offline_devices","backgroundColor","hoverBackgroundColor","chartOptions","responsive","maintainAspectRatio","cutout","plugins","legend","position","dispatch"],"sources":["C:\\Users\\user\\Desktop\\dastur\\hp\\monitoring\\frontend\\src\\views\\Statistics.vue"],"sourcesContent":["<template>\r\n  <div class=\"statistics\">\r\n    <h1>Umumiy statistika</h1>\r\n\r\n    <!-- Statistika kartlari -->\r\n    <div class=\"stats-overview\">\r\n      <Card class=\"stats-card total\">\r\n        <template #title>\r\n          <div class=\"card-title\">\r\n            <i class=\"pi pi-mobile\"></i>\r\n            Jami qurilmalar\r\n          </div>\r\n        </template>\r\n        <template #content>\r\n          <div class=\"stat-content\">\r\n            <div class=\"stat-value\">{{ statistics?.total_devices || 0 }}</div>\r\n          </div>\r\n        </template>\r\n      </Card>\r\n\r\n      <Card class=\"stats-card online\">\r\n        <template #title>\r\n          <div class=\"card-title\">\r\n            <i class=\"pi pi-check-circle\"></i>\r\n            Online qurilmalar\r\n          </div>\r\n        </template>\r\n        <template #content>\r\n          <div class=\"stat-content\">\r\n            <div class=\"stat-value\">{{ statistics?.online_devices || 0 }}</div>\r\n            <div class=\"stat-percentage\">{{ statistics?.online_percentage || 0 }}%</div>\r\n          </div>\r\n        </template>\r\n      </Card>\r\n\r\n      <Card class=\"stats-card offline\">\r\n        <template #title>\r\n          <div class=\"card-title\">\r\n            <i class=\"pi pi-times-circle\"></i>\r\n            Offline qurilmalar\r\n          </div>\r\n        </template>\r\n        <template #content>\r\n          <div class=\"stat-content\">\r\n            <div class=\"stat-value\">{{ statistics?.offline_devices || 0 }}</div>\r\n            <div class=\"stat-percentage\">{{ 100 - (statistics?.online_percentage || 0) }}%</div>\r\n          </div>\r\n        </template>\r\n      </Card>\r\n    </div>\r\n\r\n    <!-- Donut diagramma -->\r\n    <Card class=\"chart-card\">\r\n      <template #title>\r\n        <div class=\"card-title\">\r\n          <i class=\"pi pi-chart-pie\"></i>\r\n          Qurilmalar holati\r\n        </div>\r\n      </template>\r\n      <template #content>\r\n        <Chart type=\"doughnut\" :data=\"chartData\" :options=\"chartOptions\" style=\"height: 300px\" />\r\n      </template>\r\n    </Card>\r\n\r\n    <!-- Oxirgi faoliyat -->\r\n    <Card class=\"activity-card\">\r\n      <template #title>\r\n        <div class=\"card-title\">\r\n          <i class=\"pi pi-clock\"></i>\r\n          Oxirgi faoliyat\r\n        </div>\r\n      </template>\r\n      <template #content>\r\n        <div class=\"activity-list\">\r\n          <div v-for=\"(activity, index) in statistics?.recent_activity\" :key=\"index\" class=\"activity-item\">\r\n            <i class=\"pi pi-mobile\"></i>\r\n            <div class=\"activity-info\">\r\n              <div class=\"activity-device\">{{ activity.device }}</div>\r\n              <div class=\"activity-time\">{{ activity.last_seen }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </template>\r\n    </Card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nexport default {\r\n  name: 'Statistics',\r\n  setup() {\r\n    const store = useStore()\r\n    const statistics = computed(() => store.state.statistics)\r\n\r\n    const chartData = computed(() => ({\r\n      labels: ['Online', 'Offline'],\r\n      datasets: [\r\n        {\r\n          data: [\r\n            statistics.value?.online_devices || 0,\r\n            statistics.value?.offline_devices || 0\r\n          ],\r\n          backgroundColor: ['#4caf50', '#f44336'],\r\n          hoverBackgroundColor: ['#66bb6a', '#ef5350']\r\n        }\r\n      ]\r\n    }))\r\n\r\n    const chartOptions = {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      cutout: '60%',\r\n      plugins: {\r\n        legend: {\r\n          position: 'bottom'\r\n        }\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      store.dispatch('fetchStatistics')\r\n    })\r\n\r\n    return {\r\n      statistics,\r\n      chartData,\r\n      chartOptions\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.statistics {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2rem;\r\n}\r\n\r\nh1 {\r\n  color: var(--text-primary);\r\n  font-size: 1.75rem;\r\n  margin: 0 0 1rem;\r\n}\r\n\r\n.stats-overview {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  gap: 1.5rem;\r\n}\r\n\r\n.stats-card {\r\n  background: var(--card-bg) !important;\r\n  border-radius: 1rem;\r\n  transition: transform 0.3s, box-shadow 0.3s;\r\n  overflow: hidden;\r\n}\r\n\r\n.stats-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 8px 16px rgba(0,0,0,0.2);\r\n}\r\n\r\n.stats-card :deep(.p-card-content) {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.card-title {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.75rem;\r\n  font-size: 1.1rem;\r\n  color: var(--text-primary);\r\n  padding: 1rem 1.5rem;\r\n  background: rgba(255,255,255,0.05);\r\n  margin: -1rem -1.5rem 1rem;\r\n}\r\n\r\n.card-title i {\r\n  font-size: 1.25rem;\r\n  opacity: 0.9;\r\n}\r\n\r\n.stat-content {\r\n  text-align: center;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 3rem;\r\n  font-weight: bold;\r\n  line-height: 1.2;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.stat-percentage {\r\n  font-size: 1.25rem;\r\n  color: var(--text-secondary);\r\n  padding: 0.25rem 1rem;\r\n  background: rgba(255,255,255,0.05);\r\n  border-radius: 1rem;\r\n  display: inline-block;\r\n}\r\n\r\n.stats-card.total .stat-value {\r\n  color: var(--accent-color);\r\n}\r\n\r\n.stats-card.online .stat-value {\r\n  color: var(--success-color);\r\n}\r\n\r\n.stats-card.offline .stat-value {\r\n  color: var(--danger-color);\r\n}\r\n\r\n.chart-card {\r\n  background: var(--card-bg) !important;\r\n  border-radius: 1rem;\r\n  overflow: hidden;\r\n}\r\n\r\n.chart-card :deep(.p-card-content) {\r\n  padding: 2rem;\r\n}\r\n\r\n:deep(.p-chart) {\r\n  margin: 0 auto;\r\n}\r\n\r\n.activity-card {\r\n  background: var(--card-bg) !important;\r\n  border-radius: 1rem;\r\n  overflow: hidden;\r\n}\r\n\r\n.activity-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.75rem;\r\n}\r\n\r\n.activity-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  padding: 1rem;\r\n  background: rgba(255,255,255,0.05);\r\n  border-radius: 0.75rem;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.activity-item:hover {\r\n  background: rgba(255,255,255,0.08);\r\n}\r\n\r\n.activity-item i {\r\n  font-size: 1.5rem;\r\n  color: var(--accent-color);\r\n  background: rgba(63, 81, 181, 0.15);\r\n  padding: 0.75rem;\r\n  border-radius: 0.75rem;\r\n}\r\n\r\n.activity-info {\r\n  flex: 1;\r\n}\r\n\r\n.activity-device {\r\n  font-weight: 500;\r\n  color: var(--text-primary);\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.activity-time {\r\n  font-size: 0.875rem;\r\n  color: var(--text-secondary);\r\n}\r\n</style>\r\n"],"mappings":"AAwFA,SAASA,QAAQ,EAAEC,SAAQ,QAAS,KAAI;AACxC,SAASC,QAAO,QAAS,MAAK;AAE9B,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,QAAQ,CAAC;IACvB,MAAMI,UAAS,GAAIN,QAAQ,CAAC,MAAMK,KAAK,CAACE,KAAK,CAACD,UAAU;IAExD,MAAME,SAAQ,GAAIR,QAAQ,CAAC,OAAO;MAChCS,MAAM,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC;MAC7BC,QAAQ,EAAE,CACR;QACEC,IAAI,EAAE,CACJL,UAAU,CAACM,KAAK,EAAEC,cAAa,IAAK,CAAC,EACrCP,UAAU,CAACM,KAAK,EAAEE,eAAc,IAAK,EACtC;QACDC,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;QACvCC,oBAAoB,EAAE,CAAC,SAAS,EAAE,SAAS;MAC7C;IAEJ,CAAC,CAAC;IAEF,MAAMC,YAAW,GAAI;MACnBC,UAAU,EAAE,IAAI;MAChBC,mBAAmB,EAAE,KAAK;MAC1BC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,QAAQ,EAAE;QACZ;MACF;IACF;IAEAtB,SAAS,CAAC,MAAM;MACdI,KAAK,CAACmB,QAAQ,CAAC,iBAAiB;IAClC,CAAC;IAED,OAAO;MACLlB,UAAU;MACVE,SAAS;MACTS;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}