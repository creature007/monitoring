{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from 'axios';\nexport default createStore({\n  state: {\n    devices: [],\n    statistics: null,\n    loading: false,\n    error: null\n  },\n  mutations: {\n    SET_DEVICES(state, devices) {\n      state.devices = devices;\n    },\n    SET_STATISTICS(state, statistics) {\n      state.statistics = statistics;\n    },\n    SET_LOADING(state, loading) {\n      state.loading = loading;\n    },\n    SET_ERROR(state, error) {\n      state.error = error;\n    }\n  },\n  actions: {\n    async fetchDevices({\n      commit\n    }) {\n      try {\n        commit('SET_LOADING', true);\n        const response = await axios.get('http://127.0.0.1:8007/api/devices');\n        commit('SET_DEVICES', response.data.devices);\n      } catch (error) {\n        commit('SET_ERROR', error.message);\n      } finally {\n        commit('SET_LOADING', false);\n      }\n    },\n    async fetchStatistics({\n      commit\n    }) {\n      try {\n        commit('SET_LOADING', true);\n        const response = await axios.get('http://127.0.0.1:8007/api/statistics');\n        commit('SET_STATISTICS', response.data.statistics);\n      } catch (error) {\n        commit('SET_ERROR', error.message);\n      } finally {\n        commit('SET_LOADING', false);\n      }\n    }\n  },\n  getters: {\n    onlineDevices: state => state.devices.filter(device => device.online),\n    offlineDevices: state => state.devices.filter(device => !device.online),\n    deviceById: state => id => state.devices.find(device => device.id === id)\n  }\n});","map":{"version":3,"names":["createStore","axios","state","devices","statistics","loading","error","mutations","SET_DEVICES","SET_STATISTICS","SET_LOADING","SET_ERROR","actions","fetchDevices","commit","response","get","data","message","fetchStatistics","getters","onlineDevices","filter","device","online","offlineDevices","deviceById","id","find"],"sources":["C:/Users/user/Desktop/dastur/hp/monitoring/frontend/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\r\nimport axios from 'axios'\r\n\r\nexport default createStore({\r\n  state: {\r\n    devices: [],\r\n    statistics: null,\r\n    loading: false,\r\n    error: null\r\n  },\r\n  mutations: {\r\n    SET_DEVICES(state, devices) {\r\n      state.devices = devices\r\n    },\r\n    SET_STATISTICS(state, statistics) {\r\n      state.statistics = statistics\r\n    },\r\n    SET_LOADING(state, loading) {\r\n      state.loading = loading\r\n    },\r\n    SET_ERROR(state, error) {\r\n      state.error = error\r\n    }\r\n  },\r\n  actions: {\r\n    async fetchDevices({ commit }) {\r\n      try {\r\n        commit('SET_LOADING', true)\r\n        const response = await axios.get('http://127.0.0.1:8007/api/devices')\r\n        commit('SET_DEVICES', response.data.devices)\r\n      } catch (error) {\r\n        commit('SET_ERROR', error.message)\r\n      } finally {\r\n        commit('SET_LOADING', false)\r\n      }\r\n    },\r\n    async fetchStatistics({ commit }) {\r\n      try {\r\n        commit('SET_LOADING', true)\r\n        const response = await axios.get('http://127.0.0.1:8007/api/statistics')\r\n        commit('SET_STATISTICS', response.data.statistics)\r\n      } catch (error) {\r\n        commit('SET_ERROR', error.message)\r\n      } finally {\r\n        commit('SET_LOADING', false)\r\n      }\r\n    }\r\n  },\r\n  getters: {\r\n    onlineDevices: state => state.devices.filter(device => device.online),\r\n    offlineDevices: state => state.devices.filter(device => !device.online),\r\n    deviceById: state => id => state.devices.find(device => device.id === id)\r\n  }\r\n})\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,SAAS,EAAE;IACTC,WAAWA,CAACN,KAAK,EAAEC,OAAO,EAAE;MAC1BD,KAAK,CAACC,OAAO,GAAGA,OAAO;IACzB,CAAC;IACDM,cAAcA,CAACP,KAAK,EAAEE,UAAU,EAAE;MAChCF,KAAK,CAACE,UAAU,GAAGA,UAAU;IAC/B,CAAC;IACDM,WAAWA,CAACR,KAAK,EAAEG,OAAO,EAAE;MAC1BH,KAAK,CAACG,OAAO,GAAGA,OAAO;IACzB,CAAC;IACDM,SAASA,CAACT,KAAK,EAAEI,KAAK,EAAE;MACtBJ,KAAK,CAACI,KAAK,GAAGA,KAAK;IACrB;EACF,CAAC;EACDM,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAC;MAAEC;IAAO,CAAC,EAAE;MAC7B,IAAI;QACFA,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;QAC3B,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,mCAAmC,CAAC;QACrEF,MAAM,CAAC,aAAa,EAAEC,QAAQ,CAACE,IAAI,CAACd,OAAO,CAAC;MAC9C,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdQ,MAAM,CAAC,WAAW,EAAER,KAAK,CAACY,OAAO,CAAC;MACpC,CAAC,SAAS;QACRJ,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC;MAC9B;IACF,CAAC;IACD,MAAMK,eAAeA,CAAC;MAAEL;IAAO,CAAC,EAAE;MAChC,IAAI;QACFA,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;QAC3B,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,sCAAsC,CAAC;QACxEF,MAAM,CAAC,gBAAgB,EAAEC,QAAQ,CAACE,IAAI,CAACb,UAAU,CAAC;MACpD,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdQ,MAAM,CAAC,WAAW,EAAER,KAAK,CAACY,OAAO,CAAC;MACpC,CAAC,SAAS;QACRJ,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC;MAC9B;IACF;EACF,CAAC;EACDM,OAAO,EAAE;IACPC,aAAa,EAAEnB,KAAK,IAAIA,KAAK,CAACC,OAAO,CAACmB,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACC,MAAM,CAAC;IACrEC,cAAc,EAAEvB,KAAK,IAAIA,KAAK,CAACC,OAAO,CAACmB,MAAM,CAACC,MAAM,IAAI,CAACA,MAAM,CAACC,MAAM,CAAC;IACvEE,UAAU,EAAExB,KAAK,IAAIyB,EAAE,IAAIzB,KAAK,CAACC,OAAO,CAACyB,IAAI,CAACL,MAAM,IAAIA,MAAM,CAACI,EAAE,KAAKA,EAAE;EAC1E;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}