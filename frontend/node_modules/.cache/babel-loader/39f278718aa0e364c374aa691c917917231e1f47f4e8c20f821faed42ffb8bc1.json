{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport moment from 'moment';\nexport default {\n  name: 'Reports',\n  setup() {\n    const store = useStore();\n    const period = ref('weekly');\n    const report = ref(null);\n    const loading = ref(false);\n    const showFilters = ref(false);\n    const selectedDevices = ref([]);\n\n    // Filtr opsiyalari\n    const filters = ref({\n      status: [],\n      location: [],\n      uptime: [0, 100]\n    });\n    const statusOptions = [{\n      name: 'Faol',\n      value: 'active'\n    }, {\n      name: 'Nofaol',\n      value: 'inactive'\n    }];\n    const locationOptions = computed(() => {\n      if (!report.value?.devices) return [];\n      const locations = [...new Set(report.value.devices.map(d => d.description))];\n      return locations.map(loc => ({\n        name: loc,\n        value: loc\n      }));\n    });\n\n    // Qurilmalarni filtrlash\n    const filteredDevices = computed(() => {\n      if (!report.value?.devices) return [];\n      return report.value.devices.filter(device => {\n        const statusMatch = filters.value.status.length === 0 || filters.value.status.includes(device.status_period);\n        const locationMatch = filters.value.location.length === 0 || filters.value.location.includes(device.description);\n        const uptimeMatch = device.uptime >= filters.value.uptime[0] && device.uptime <= filters.value.uptime[1];\n        return statusMatch && locationMatch && uptimeMatch;\n      });\n    });\n    const chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        y: {\n          beginAtZero: true,\n          grid: {\n            display: false\n          }\n        },\n        x: {\n          grid: {\n            display: false\n          }\n        }\n      },\n      plugins: {\n        legend: {\n          display: false\n        }\n      },\n      elements: {\n        line: {\n          tension: 0.4\n        },\n        point: {\n          radius: 0\n        }\n      }\n    };\n    const fetchReport = async () => {\n      loading.value = true;\n      try {\n        const response = await fetch(`http://127.0.0.1:8007/api/report?type=${period.value}`);\n        const data = await response.json();\n        report.value = data.report;\n\n        // Qurilmalar uchun ishlash vaqtini hisoblash\n        report.value.devices = report.value.devices.map(device => ({\n          ...device,\n          uptime: calculateDeviceUptime(device),\n          chartData: generateDeviceChartData(device)\n        }));\n      } catch (error) {\n        console.error('Hisobot olishda xatolik:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n    const calculateDeviceUptime = device => {\n      // Simulyatsiya: Haqiqiy ma'lumotlar backend'dan kelishi kerak\n      return Math.floor(Math.random() * (100 - 50) + 50);\n    };\n    const generateDeviceChartData = device => {\n      // Simulyatsiya: Haqiqiy ma'lumotlar backend'dan kelishi kerak\n      const labels = Array.from({\n        length: 24\n      }, (_, i) => `${i}:00`);\n      const data = Array.from({\n        length: 24\n      }, () => Math.random() * 100);\n      return {\n        labels,\n        datasets: [{\n          data,\n          borderColor: device.status_period === 'active' ? '#4caf50' : '#f44336',\n          fill: true,\n          backgroundColor: device.status_period === 'active' ? 'rgba(76, 175, 80, 0.1)' : 'rgba(244, 67, 54, 0.1)'\n        }]\n      };\n    };\n    const getDeviceChart = device => {\n      return device.chartData;\n    };\n    const calculateAverageUptime = devices => {\n      if (!devices || devices.length === 0) return 0;\n      const total = devices.reduce((sum, device) => sum + device.uptime, 0);\n      return (total / devices.length).toFixed(1);\n    };\n    const setPeriod = async newPeriod => {\n      period.value = newPeriod;\n      await fetchReport();\n    };\n    const toggleFilters = () => {\n      showFilters.value = !showFilters.value;\n    };\n    const formatDate = timestamp => {\n      if (!timestamp) return 'Mavjud emas';\n      return moment(timestamp).format('DD.MM.YYYY HH:mm');\n    };\n    const downloadReport = () => {\n      if (!report.value) return;\n      const data = selectedDevices.value.length > 0 ? selectedDevices.value : report.value.devices;\n      const csvData = data.map(device => ({\n        'Qurilma': device.number,\n        'Tavsif': device.description || '',\n        'Holat': device.status_period === 'active' ? 'Faol' : 'Nofaol',\n        'Ishlash vaqti': `${device.uptime}%`,\n        'Oxirgi faollik': formatDate(device.lastupdate)\n      }));\n      const csvContent = \"data:text/csv;charset=utf-8,\" + Object.keys(csvData[0]).join(\",\") + \"\\n\" + csvData.map(row => Object.values(row).join(\",\")).join(\"\\n\");\n      const encodedUri = encodeURI(csvContent);\n      const link = document.createElement(\"a\");\n      link.setAttribute(\"href\", encodedUri);\n      link.setAttribute(\"download\", `qurilmalar_hisoboti_${period.value}_${moment().format('YYYY-MM-DD')}.csv`);\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    };\n    onMounted(() => {\n      fetchReport();\n    });\n    return {\n      period,\n      report,\n      loading,\n      showFilters,\n      selectedDevices,\n      filters,\n      statusOptions,\n      locationOptions,\n      filteredDevices,\n      chartOptions,\n      setPeriod,\n      toggleFilters,\n      formatDate,\n      downloadReport,\n      calculateAverageUptime,\n      getDeviceChart\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useStore","moment","name","setup","store","period","report","loading","showFilters","selectedDevices","filters","status","location","uptime","statusOptions","value","locationOptions","devices","locations","Set","map","d","description","loc","filteredDevices","filter","device","statusMatch","length","includes","status_period","locationMatch","uptimeMatch","chartOptions","responsive","maintainAspectRatio","scales","y","beginAtZero","grid","display","x","plugins","legend","elements","line","tension","point","radius","fetchReport","response","fetch","data","json","calculateDeviceUptime","chartData","generateDeviceChartData","error","console","Math","floor","random","labels","Array","from","_","i","datasets","borderColor","fill","backgroundColor","getDeviceChart","calculateAverageUptime","total","reduce","sum","toFixed","setPeriod","newPeriod","toggleFilters","formatDate","timestamp","format","downloadReport","csvData","number","lastupdate","csvContent","Object","keys","join","row","values","encodedUri","encodeURI","link","document","createElement","setAttribute","body","appendChild","click","removeChild"],"sources":["C:\\Users\\user\\Desktop\\dastur\\hp\\monitoring\\frontend\\src\\views\\Reports.vue"],"sourcesContent":["<template>\r\n  <div class=\"reports\">\r\n    <div class=\"reports-header\">\r\n      <div class=\"header-content\">\r\n        <h1>Qurilmalar hisoboti</h1>\r\n        <div class=\"summary-info\">\r\n          <div class=\"stat-item\">\r\n            <span class=\"stat-value\">{{ report?.total_devices || 0 }}</span>\r\n            <span class=\"stat-label\">Jami qurilmalar</span>\r\n          </div>\r\n          <div class=\"stat-item success\">\r\n            <span class=\"stat-value\">{{ report?.active_devices || 0 }}</span>\r\n            <span class=\"stat-label\">Faol</span>\r\n          </div>\r\n          <div class=\"stat-item danger\">\r\n            <span class=\"stat-value\">{{ report?.inactive_devices || 0 }}</span>\r\n            <span class=\"stat-label\">Nofaol</span>\r\n          </div>\r\n          <div class=\"stat-item info\">\r\n            <span class=\"stat-value\">{{ calculateAverageUptime(report?.devices) }}%</span>\r\n            <span class=\"stat-label\">O'rtacha ishlash</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"period-selector\">\r\n        <span class=\"period-label\">Davr:</span>\r\n        <div class=\"period-buttons\">\r\n          <Button \r\n            :class=\"{ active: period === 'daily' }\" \r\n            @click=\"setPeriod('daily')\"\r\n            class=\"p-button-rounded\"\r\n            label=\"Kunlik\"\r\n            icon=\"pi pi-calendar\"\r\n          />\r\n          <Button \r\n            :class=\"{ active: period === 'weekly' }\" \r\n            @click=\"setPeriod('weekly')\"\r\n            class=\"p-button-rounded\"\r\n            label=\"Haftalik\"\r\n            icon=\"pi pi-calendar-week\"\r\n          />\r\n          <Button \r\n            :class=\"{ active: period === 'monthly' }\" \r\n            @click=\"setPeriod('monthly')\"\r\n            class=\"p-button-rounded\"\r\n            label=\"Oylik\"\r\n            icon=\"pi pi-calendar-plus\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"report-content\" v-if=\"report\">\r\n      <div class=\"report-overview\">\r\n        <!-- Umumiy statistika -->\r\n        <div class=\"stats-grid\">\r\n          <Card class=\"stat-card total\">\r\n            <template #content>\r\n              <div class=\"stat-icon\">\r\n                <i class=\"pi pi-server\"></i>\r\n              </div>\r\n              <div class=\"stat-info\">\r\n                <span class=\"stat-value\">{{ report.total_devices }}</span>\r\n                <span class=\"stat-label\">Jami qurilmalar</span>\r\n              </div>\r\n            </template>\r\n          </Card>\r\n\r\n          <Card class=\"stat-card active\">\r\n            <template #content>\r\n              <div class=\"stat-icon\">\r\n                <i class=\"pi pi-check-circle\"></i>\r\n              </div>\r\n              <div class=\"stat-info\">\r\n                <span class=\"stat-value\">{{ report.active_devices }}</span>\r\n                <span class=\"stat-label\">Faol qurilmalar</span>\r\n                <span class=\"stat-percentage\">{{ (report.active_devices / report.total_devices * 100).toFixed(1) }}%</span>\r\n              </div>\r\n            </template>\r\n          </Card>\r\n\r\n          <Card class=\"stat-card inactive\">\r\n            <template #content>\r\n              <div class=\"stat-icon\">\r\n                <i class=\"pi pi-times-circle\"></i>\r\n              </div>\r\n              <div class=\"stat-info\">\r\n                <span class=\"stat-value\">{{ report.inactive_devices }}</span>\r\n                <span class=\"stat-label\">Nofaol qurilmalar</span>\r\n                <span class=\"stat-percentage\">{{ (report.inactive_devices / report.total_devices * 100).toFixed(1) }}%</span>\r\n              </div>\r\n            </template>\r\n          </Card>\r\n\r\n          <Card class=\"stat-card uptime\">\r\n            <template #content>\r\n              <div class=\"stat-icon\">\r\n                <i class=\"pi pi-clock\"></i>\r\n              </div>\r\n              <div class=\"stat-info\">\r\n                <span class=\"stat-value\">{{ calculateAverageUptime(report.devices) }}%</span>\r\n                <span class=\"stat-label\">O'rtacha ishlash vaqti</span>\r\n              </div>\r\n            </template>\r\n          </Card>\r\n        </div>\r\n\r\n        <!-- Batafsil ma'lumotlar -->\r\n        <Card class=\"details-table\">\r\n          <template #title>\r\n            <div class=\"table-header\">\r\n              <div class=\"header-left\">\r\n                <i class=\"pi pi-list\"></i>\r\n                <h2>Batafsil ma'lumotlar</h2>\r\n              </div>\r\n              <div class=\"header-actions\">\r\n                <Button icon=\"pi pi-filter\" label=\"Filtrlash\" class=\"p-button-outlined\" @click=\"toggleFilters\" />\r\n                <Button icon=\"pi pi-download\" label=\"Hisobotni yuklash\" @click=\"downloadReport\" />\r\n              </div>\r\n            </div>\r\n          </template>\r\n          <template #content>\r\n            <!-- Filtrlar paneli -->\r\n            <div class=\"filters-panel\" v-if=\"showFilters\">\r\n              <div class=\"filter-group\">\r\n                <label>Holat</label>\r\n                <MultiSelect v-model=\"filters.status\" :options=\"statusOptions\" optionLabel=\"name\" \r\n                           placeholder=\"Tanlang\" class=\"filter-input\" />\r\n              </div>\r\n              <div class=\"filter-group\">\r\n                <label>Joylashuv</label>\r\n                <MultiSelect v-model=\"filters.location\" :options=\"locationOptions\" optionLabel=\"name\" \r\n                           placeholder=\"Tanlang\" class=\"filter-input\" />\r\n              </div>\r\n              <div class=\"filter-group\">\r\n                <label>Ishlash vaqti</label>\r\n                <Slider v-model=\"filters.uptime\" range class=\"filter-slider\" />\r\n                <span class=\"filter-value\">{{ filters.uptime[0] }}% - {{ filters.uptime[1] }}%</span>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Qurilmalar jadvali -->\r\n            <DataTable \r\n              :value=\"filteredDevices\" \r\n              :paginator=\"true\" \r\n              :rows=\"10\"\r\n              paginatorTemplate=\"FirstPageLink PrevPageLink CurrentPageReport NextPageLink LastPageLink\"\r\n              currentPageReportTemplate=\"{first} - {last} / {totalRecords}\"\r\n              :scrollable=\"true\"\r\n              scrollHeight=\"calc(100vh - 500px)\"\r\n              class=\"p-datatable-sm custom-table\"\r\n              v-model:selection=\"selectedDevices\"\r\n              :loading=\"loading\"\r\n              sortField=\"lastupdate\"\r\n              :sortOrder=\"-1\"\r\n              striped\r\n              showGridlines\r\n              :resizableColumns=\"true\"\r\n              :rowsPerPageOptions=\"[5,10,20,50]\"\r\n            >\r\n              <Column selectionMode=\"multiple\" headerStyle=\"width: 3rem\"></Column>\r\n              <Column field=\"number\" header=\"Qurilma\" sortable>\r\n                <template #body=\"slotProps\">\r\n                  <div class=\"device-cell\">\r\n                    <div class=\"device-icon-wrapper\">\r\n                      <i class=\"pi pi-desktop\"></i>\r\n                    </div>\r\n                    <div class=\"device-info\">\r\n                      <router-link :to=\"'/device/' + slotProps.data.id\" class=\"device-name\">\r\n                        {{ slotProps.data.number }}\r\n                      </router-link>\r\n                      <span class=\"device-description\">{{ slotProps.data.description }}</span>\r\n                    </div>\r\n                  </div>\r\n                </template>\r\n              </Column>\r\n              <Column field=\"status_period\" header=\"Holat\" sortable>\r\n                <template #body=\"slotProps\">\r\n                  <span :class=\"['status-indicator', slotProps.data.status_period]\">\r\n                    <i :class=\"['pi', slotProps.data.status_period === 'active' ? 'pi-check' : 'pi-times']\"></i>\r\n                    {{ slotProps.data.status_period === 'active' ? 'Faol' : 'Nofaol' }}\r\n                  </span>\r\n                </template>\r\n              </Column>\r\n              <Column field=\"uptime\" header=\"Ishlash vaqti\" sortable>\r\n                <template #body=\"slotProps\">\r\n                  <div class=\"uptime-cell\">\r\n                    <div class=\"progress-bar\">\r\n                      <div class=\"progress-fill\" :style=\"{ width: slotProps.data.uptime + '%' }\"></div>\r\n                    </div>\r\n                    <span class=\"uptime-value\">{{ slotProps.data.uptime }}%</span>\r\n                  </div>\r\n                </template>\r\n              </Column>\r\n              <Column field=\"lastupdate\" header=\"Oxirgi faollik\" sortable>\r\n                <template #body=\"slotProps\">\r\n                  <div class=\"timestamp-cell\">\r\n                    <i class=\"pi pi-clock\"></i>\r\n                    <span>{{ formatDate(slotProps.data.lastupdate) }}</span>\r\n                  </div>\r\n                </template>\r\n              </Column>\r\n              <Column header=\"Tahlil\">\r\n                <template #body=\"slotProps\">\r\n                  <div class=\"analytics-cell\">\r\n                    <Chart type=\"line\" :data=\"getDeviceChart(slotProps.data)\" :options=\"chartOptions\" class=\"mini-chart\" />\r\n                  </div>\r\n                </template>\r\n              </Column>\r\n            </DataTable>\r\n          </template>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport moment from 'moment'\r\n\r\nexport default {\r\n  name: 'Reports',\r\n  setup() {\r\n    const store = useStore()\r\n    const period = ref('weekly')\r\n    const report = ref(null)\r\n    const loading = ref(false)\r\n    const showFilters = ref(false)\r\n    const selectedDevices = ref([])\r\n\r\n    // Filtr opsiyalari\r\n    const filters = ref({\r\n      status: [],\r\n      location: [],\r\n      uptime: [0, 100]\r\n    })\r\n\r\n    const statusOptions = [\r\n      { name: 'Faol', value: 'active' },\r\n      { name: 'Nofaol', value: 'inactive' }\r\n    ]\r\n\r\n    const locationOptions = computed(() => {\r\n      if (!report.value?.devices) return []\r\n      const locations = [...new Set(report.value.devices.map(d => d.description))]\r\n      return locations.map(loc => ({ name: loc, value: loc }))\r\n    })\r\n\r\n    // Qurilmalarni filtrlash\r\n    const filteredDevices = computed(() => {\r\n      if (!report.value?.devices) return []\r\n      \r\n      return report.value.devices.filter(device => {\r\n        const statusMatch = filters.value.status.length === 0 || \r\n                          filters.value.status.includes(device.status_period)\r\n        \r\n        const locationMatch = filters.value.location.length === 0 || \r\n                            filters.value.location.includes(device.description)\r\n        \r\n        const uptimeMatch = device.uptime >= filters.value.uptime[0] && \r\n                           device.uptime <= filters.value.uptime[1]\r\n        \r\n        return statusMatch && locationMatch && uptimeMatch\r\n      })\r\n    })\r\n\r\n    const chartOptions = {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      scales: {\r\n        y: {\r\n          beginAtZero: true,\r\n          grid: {\r\n            display: false\r\n          }\r\n        },\r\n        x: {\r\n          grid: {\r\n            display: false\r\n          }\r\n        }\r\n      },\r\n      plugins: {\r\n        legend: {\r\n          display: false\r\n        }\r\n      },\r\n      elements: {\r\n        line: {\r\n          tension: 0.4\r\n        },\r\n        point: {\r\n          radius: 0\r\n        }\r\n      }\r\n    }\r\n\r\n    const fetchReport = async () => {\r\n      loading.value = true\r\n      try {\r\n        const response = await fetch(`http://127.0.0.1:8007/api/report?type=${period.value}`)\r\n        const data = await response.json()\r\n        report.value = data.report\r\n        \r\n        // Qurilmalar uchun ishlash vaqtini hisoblash\r\n        report.value.devices = report.value.devices.map(device => ({\r\n          ...device,\r\n          uptime: calculateDeviceUptime(device),\r\n          chartData: generateDeviceChartData(device)\r\n        }))\r\n      } catch (error) {\r\n        console.error('Hisobot olishda xatolik:', error)\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    const calculateDeviceUptime = (device) => {\r\n      // Simulyatsiya: Haqiqiy ma'lumotlar backend'dan kelishi kerak\r\n      return Math.floor(Math.random() * (100 - 50) + 50)\r\n    }\r\n\r\n    const generateDeviceChartData = (device) => {\r\n      // Simulyatsiya: Haqiqiy ma'lumotlar backend'dan kelishi kerak\r\n      const labels = Array.from({length: 24}, (_, i) => `${i}:00`)\r\n      const data = Array.from({length: 24}, () => Math.random() * 100)\r\n      \r\n      return {\r\n        labels,\r\n        datasets: [{\r\n          data,\r\n          borderColor: device.status_period === 'active' ? '#4caf50' : '#f44336',\r\n          fill: true,\r\n          backgroundColor: device.status_period === 'active' \r\n            ? 'rgba(76, 175, 80, 0.1)' \r\n            : 'rgba(244, 67, 54, 0.1)'\r\n        }]\r\n      }\r\n    }\r\n\r\n    const getDeviceChart = (device) => {\r\n      return device.chartData\r\n    }\r\n\r\n    const calculateAverageUptime = (devices) => {\r\n      if (!devices || devices.length === 0) return 0\r\n      const total = devices.reduce((sum, device) => sum + device.uptime, 0)\r\n      return (total / devices.length).toFixed(1)\r\n    }\r\n\r\n    const setPeriod = async (newPeriod) => {\r\n      period.value = newPeriod\r\n      await fetchReport()\r\n    }\r\n\r\n    const toggleFilters = () => {\r\n      showFilters.value = !showFilters.value\r\n    }\r\n\r\n    const formatDate = (timestamp) => {\r\n      if (!timestamp) return 'Mavjud emas'\r\n      return moment(timestamp).format('DD.MM.YYYY HH:mm')\r\n    }\r\n\r\n    const downloadReport = () => {\r\n      if (!report.value) return\r\n\r\n      const data = selectedDevices.value.length > 0 \r\n        ? selectedDevices.value \r\n        : report.value.devices\r\n\r\n      const csvData = data.map(device => ({\r\n        'Qurilma': device.number,\r\n        'Tavsif': device.description || '',\r\n        'Holat': device.status_period === 'active' ? 'Faol' : 'Nofaol',\r\n        'Ishlash vaqti': `${device.uptime}%`,\r\n        'Oxirgi faollik': formatDate(device.lastupdate)\r\n      }))\r\n\r\n      const csvContent = \"data:text/csv;charset=utf-8,\" + \r\n        Object.keys(csvData[0]).join(\",\") + \"\\n\" +\r\n        csvData.map(row => Object.values(row).join(\",\")).join(\"\\n\")\r\n\r\n      const encodedUri = encodeURI(csvContent)\r\n      const link = document.createElement(\"a\")\r\n      link.setAttribute(\"href\", encodedUri)\r\n      link.setAttribute(\"download\", `qurilmalar_hisoboti_${period.value}_${moment().format('YYYY-MM-DD')}.csv`)\r\n      document.body.appendChild(link)\r\n      link.click()\r\n      document.body.removeChild(link)\r\n    }\r\n\r\n    onMounted(() => {\r\n      fetchReport()\r\n    })\r\n\r\n    return {\r\n      period,\r\n      report,\r\n      loading,\r\n      showFilters,\r\n      selectedDevices,\r\n      filters,\r\n      statusOptions,\r\n      locationOptions,\r\n      filteredDevices,\r\n      chartOptions,\r\n      setPeriod,\r\n      toggleFilters,\r\n      formatDate,\r\n      downloadReport,\r\n      calculateAverageUptime,\r\n      getDeviceChart\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.reports {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2rem;\r\n}\r\n\r\nh1 {\r\n  color: var(--text-primary);\r\n  font-size: 1.75rem;\r\n  margin: 0 0 1rem;\r\n}\r\n\r\n.report-controls {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background: var(--card-bg);\r\n  padding: 1.5rem;\r\n  border-radius: 1rem;\r\n}\r\n\r\n.period-selector {\r\n  display: flex;\r\n  gap: 1rem;\r\n}\r\n\r\n.period-selector :deep(.p-button) {\r\n  background: rgba(255,255,255,0.1);\r\n  border: none;\r\n  color: var(--text-secondary);\r\n  transition: all 0.3s;\r\n}\r\n\r\n.period-selector :deep(.p-button.active) {\r\n  background: var(--accent-color);\r\n  color: var(--text-primary);\r\n}\r\n\r\n.period-selector :deep(.p-button:hover) {\r\n  background: var(--accent-color);\r\n  color: var(--text-primary);\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.report-summary {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  gap: 1.5rem;\r\n}\r\n\r\n.summary-card {\r\n  background: var(--card-bg) !important;\r\n  border-radius: 1rem;\r\n  overflow: hidden;\r\n}\r\n\r\n.card-title {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.75rem;\r\n  font-size: 1.1rem;\r\n  color: var(--text-primary);\r\n  padding: 1rem 1.5rem;\r\n  background: rgba(255,255,255,0.05);\r\n  margin: -1rem -1.5rem 1rem;\r\n}\r\n\r\n.card-title i {\r\n  font-size: 1.25rem;\r\n  opacity: 0.9;\r\n}\r\n\r\n.summary-stats {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 1.5rem;\r\n  padding: 1rem 0;\r\n}\r\n\r\n.summary-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  padding: 1.5rem;\r\n  background: rgba(255,255,255,0.05);\r\n  border-radius: 1rem;\r\n  transition: transform 0.3s;\r\n}\r\n\r\n.summary-item:hover {\r\n  transform: translateY(-5px);\r\n}\r\n\r\n.summary-item label {\r\n  font-size: 0.875rem;\r\n  color: var(--text-secondary);\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.summary-item span {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  line-height: 1.2;\r\n}\r\n\r\n.summary-item span.total {\r\n  color: var(--accent-color);\r\n}\r\n\r\n.summary-item span.active {\r\n  color: var(--success-color);\r\n}\r\n\r\n.summary-item span.inactive {\r\n  color: var(--danger-color);\r\n}\r\n\r\n.devices-table {\r\n  background: var(--card-bg) !important;\r\n  border-radius: 1rem;\r\n  overflow: hidden;\r\n}\r\n\r\n.table-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 1rem 1.5rem;\r\n  background: rgba(255,255,255,0.05);\r\n  margin: -1rem -1.5rem 1rem;\r\n}\r\n\r\n.device-link {\r\n  color: var(--accent-color);\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  transition: color 0.3s;\r\n}\r\n\r\n.device-link:hover {\r\n  color: var(--text-primary);\r\n}\r\n\r\n.status-badge {\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 2rem;\r\n  font-size: 0.875rem;\r\n  font-weight: 500;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.status-badge::before {\r\n  content: '';\r\n  display: inline-block;\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 50%;\r\n}\r\n\r\n.status-badge.active {\r\n  background: rgba(76, 175, 80, 0.15);\r\n  color: var(--success-color);\r\n}\r\n\r\n.status-badge.active::before {\r\n  background: var(--success-color);\r\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\r\n}\r\n\r\n.status-badge.inactive {\r\n  background: rgba(244, 67, 54, 0.15);\r\n  color: var(--danger-color);\r\n}\r\n\r\n.status-badge.inactive::before {\r\n  background: var(--danger-color);\r\n  box-shadow: 0 0 0 2px rgba(244, 67, 54, 0.2);\r\n}\r\n\r\n/* Paginatsiya stillari */\r\n:deep(.p-paginator) {\r\n  background: var(--card-bg);\r\n  border: none;\r\n  padding: 1rem;\r\n  border-radius: 0 0 1rem 1rem;\r\n}\r\n\r\n:deep(.p-paginator .p-paginator-element) {\r\n  color: var(--text-secondary);\r\n  border: none;\r\n  background: transparent;\r\n  width: 2.5rem;\r\n  height: 2.5rem;\r\n  margin: 0 0.2rem;\r\n  border-radius: 8px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n:deep(.p-paginator .p-paginator-element:not(.p-highlight):not(.p-disabled):hover) {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  color: var(--text-primary);\r\n}\r\n\r\n:deep(.p-paginator .p-paginator-element.p-highlight) {\r\n  background: var(--accent-color);\r\n  color: var(--text-primary);\r\n}\r\n\r\n:deep(.p-paginator .p-paginator-current) {\r\n  color: var(--text-secondary);\r\n  margin: 0 1rem;\r\n}\r\n\r\n:deep(.p-dropdown) {\r\n  background: transparent;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  border-radius: 8px;\r\n}\r\n\r\n:deep(.p-dropdown:not(.p-disabled):hover) {\r\n  border-color: var(--accent-color);\r\n}\r\n\r\n:deep(.p-dropdown-panel) {\r\n  background: var(--card-bg);\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  border-radius: 8px;\r\n}\r\n\r\n:deep(.p-dropdown-item) {\r\n  color: var(--text-secondary);\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 4px;\r\n  margin: 0.2rem;\r\n}\r\n\r\n:deep(.p-dropdown-item:hover) {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  color: var(--text-primary);\r\n}\r\n\r\n:deep(.p-dropdown-item.p-highlight) {\r\n  background: var(--accent-color);\r\n  color: var(--text-primary);\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}