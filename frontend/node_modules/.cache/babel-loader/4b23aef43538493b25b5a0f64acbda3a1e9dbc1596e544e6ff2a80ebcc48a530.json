{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRoute } from 'vue-router';\nimport axios from 'axios';\nimport moment from 'moment';\nexport default {\n  name: 'DeviceDetails',\n  setup() {\n    const store = useStore();\n    const route = useRoute();\n    const deviceId = parseInt(route.params.id);\n    const startDate = ref(null);\n    const endDate = ref(null);\n    const dateRangeStats = ref(null);\n    const device = computed(() => store.getters.deviceById(deviceId));\n    const chartData = computed(() => {\n      if (!dateRangeStats.value) return null;\n      const dates = Object.keys(dateRangeStats.value);\n      const onlineHours = dates.map(date => dateRangeStats.value[date].online_hours);\n      const offlineHours = dates.map(date => dateRangeStats.value[date].offline_hours);\n      return {\n        labels: dates,\n        datasets: [{\n          label: 'Online soatlar',\n          data: onlineHours,\n          borderColor: '#4caf50',\n          tension: 0.4\n        }, {\n          label: 'Offline soatlar',\n          data: offlineHours,\n          borderColor: '#f44336',\n          tension: 0.4\n        }]\n      };\n    });\n    const chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'bottom'\n        }\n      },\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    };\n    const fetchDateRangeStats = async () => {\n      if (!startDate.value || !endDate.value) return;\n      try {\n        const response = await axios.get(`http://127.0.0.1:8007/api/device-stats/${deviceId}`, {\n          params: {\n            start_date: moment(startDate.value).format('YYYY-MM-DD'),\n            end_date: moment(endDate.value).format('YYYY-MM-DD')\n          }\n        });\n        dateRangeStats.value = response.data.stats;\n      } catch (error) {\n        console.error('Statistika olishda xatolik:', error);\n      }\n    };\n    onMounted(() => {\n      if (!device.value) {\n        store.dispatch('fetchDevices');\n      }\n    });\n    return {\n      device,\n      startDate,\n      endDate,\n      dateRangeStats,\n      chartData,\n      chartOptions,\n      fetchDateRangeStats\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useStore","useRoute","axios","moment","name","setup","store","route","deviceId","parseInt","params","id","startDate","endDate","dateRangeStats","device","getters","deviceById","chartData","value","dates","Object","keys","onlineHours","map","date","online_hours","offlineHours","offline_hours","labels","datasets","label","data","borderColor","tension","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","scales","y","beginAtZero","fetchDateRangeStats","response","get","start_date","format","end_date","stats","error","console","dispatch"],"sources":["C:\\Users\\user\\Desktop\\dastur\\hp\\monitoring\\frontend\\src\\views\\DeviceDetails.vue"],"sourcesContent":["<template>\r\n  <div class=\"device-details\" v-if=\"device\">\r\n    <div class=\"header\">\r\n      <Button icon=\"pi pi-arrow-left\" @click=\"$router.push('/')\" label=\"Orqaga\" />\r\n      <h1>{{ device.number }}</h1>\r\n    </div>\r\n\r\n    <div class=\"detail-cards\">\r\n      <!-- Asosiy ma'lumotlar -->\r\n      <Card class=\"detail-card\">\r\n        <template #title>\r\n          <div class=\"card-title\">\r\n            <i class=\"pi pi-info-circle\"></i>\r\n            Asosiy ma'lumotlar\r\n          </div>\r\n        </template>\r\n        <template #content>\r\n          <div class=\"info-grid\">\r\n            <div class=\"info-item\">\r\n              <label>Holat</label>\r\n              <span :class=\"['status-badge', device.online ? 'online' : 'offline']\">\r\n                {{ device.online ? 'Online' : 'Offline' }}\r\n              </span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <label>Oxirgi faollik</label>\r\n              <span>{{ device.last_seen }}</span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <label>IMEI</label>\r\n              <span>{{ device.imei || 'Mavjud emas' }}</span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <label>Telefon</label>\r\n              <span>{{ device.phone || 'Mavjud emas' }}</span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <label>IP manzil</label>\r\n              <span>{{ device.publicip || 'Mavjud emas' }}</span>\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </Card>\r\n\r\n      <!-- Statistika -->\r\n      <Card class=\"detail-card\">\r\n        <template #title>\r\n          <div class=\"card-title\">\r\n            <i class=\"pi pi-chart-line\"></i>\r\n            Statistika\r\n          </div>\r\n        </template>\r\n        <template #content>\r\n          <div class=\"stats-container\">\r\n            <div class=\"period-stats\">\r\n              <h3>Bugungi</h3>\r\n              <div class=\"stats-grid\" v-if=\"device.today_stats\">\r\n                <div class=\"stat-box online\">\r\n                  <label>Online</label>\r\n                  <span>{{ device.today_stats.online_hours }}s</span>\r\n                </div>\r\n                <div class=\"stat-box offline\">\r\n                  <label>Offline</label>\r\n                  <span>{{ device.today_stats.offline_hours }}s</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"period-stats\">\r\n              <h3>Haftalik</h3>\r\n              <div class=\"stats-grid\" v-if=\"device.weekly_stats\">\r\n                <div class=\"stat-box online\">\r\n                  <label>Online</label>\r\n                  <span>{{ device.weekly_stats.online_hours }}s</span>\r\n                </div>\r\n                <div class=\"stat-box offline\">\r\n                  <label>Offline</label>\r\n                  <span>{{ device.weekly_stats.offline_hours }}s</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </Card>\r\n    </div>\r\n\r\n    <!-- Batafsil statistika -->\r\n    <Card class=\"history-card\">\r\n      <template #title>\r\n        <div class=\"card-title\">\r\n          <i class=\"pi pi-calendar\"></i>\r\n          Davr bo'yicha statistika\r\n        </div>\r\n      </template>\r\n      <template #content>\r\n        <div class=\"date-range\">\r\n          <Calendar v-model=\"startDate\" dateFormat=\"yy-mm-dd\" placeholder=\"Boshlanish sanasi\" />\r\n          <Calendar v-model=\"endDate\" dateFormat=\"yy-mm-dd\" placeholder=\"Tugash sanasi\" />\r\n          <Button label=\"Ko'rish\" icon=\"pi pi-search\" @click=\"fetchDateRangeStats\" />\r\n        </div>\r\n\r\n        <div class=\"history-stats\" v-if=\"dateRangeStats\">\r\n          <Chart type=\"line\" :data=\"chartData\" :options=\"chartOptions\" style=\"height: 300px\" />\r\n        </div>\r\n      </template>\r\n    </Card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRoute } from 'vue-router'\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\n\r\nexport default {\r\n  name: 'DeviceDetails',\r\n  setup() {\r\n    const store = useStore()\r\n    const route = useRoute()\r\n    const deviceId = parseInt(route.params.id)\r\n\r\n    const startDate = ref(null)\r\n    const endDate = ref(null)\r\n    const dateRangeStats = ref(null)\r\n\r\n    const device = computed(() => store.getters.deviceById(deviceId))\r\n\r\n    const chartData = computed(() => {\r\n      if (!dateRangeStats.value) return null\r\n\r\n      const dates = Object.keys(dateRangeStats.value)\r\n      const onlineHours = dates.map(date => dateRangeStats.value[date].online_hours)\r\n      const offlineHours = dates.map(date => dateRangeStats.value[date].offline_hours)\r\n\r\n      return {\r\n        labels: dates,\r\n        datasets: [\r\n          {\r\n            label: 'Online soatlar',\r\n            data: onlineHours,\r\n            borderColor: '#4caf50',\r\n            tension: 0.4\r\n          },\r\n          {\r\n            label: 'Offline soatlar',\r\n            data: offlineHours,\r\n            borderColor: '#f44336',\r\n            tension: 0.4\r\n          }\r\n        ]\r\n      }\r\n    })\r\n\r\n    const chartOptions = {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      plugins: {\r\n        legend: {\r\n          position: 'bottom'\r\n        }\r\n      },\r\n      scales: {\r\n        y: {\r\n          beginAtZero: true\r\n        }\r\n      }\r\n    }\r\n\r\n    const fetchDateRangeStats = async () => {\r\n      if (!startDate.value || !endDate.value) return\r\n\r\n      try {\r\n        const response = await axios.get(`http://127.0.0.1:8007/api/device-stats/${deviceId}`, {\r\n          params: {\r\n            start_date: moment(startDate.value).format('YYYY-MM-DD'),\r\n            end_date: moment(endDate.value).format('YYYY-MM-DD')\r\n          }\r\n        })\r\n        dateRangeStats.value = response.data.stats\r\n      } catch (error) {\r\n        console.error('Statistika olishda xatolik:', error)\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      if (!device.value) {\r\n        store.dispatch('fetchDevices')\r\n      }\r\n    })\r\n\r\n    return {\r\n      device,\r\n      startDate,\r\n      endDate,\r\n      dateRangeStats,\r\n      chartData,\r\n      chartOptions,\r\n      fetchDateRangeStats\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.device-details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2rem;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.detail-cards {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  gap: 1.5rem;\r\n}\r\n\r\n.card-title {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  font-size: 1.1rem;\r\n  color: #666;\r\n}\r\n\r\n.info-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 1rem;\r\n}\r\n\r\n.info-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.info-item label {\r\n  color: #666;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.status-badge {\r\n  padding: 0.25rem 0.75rem;\r\n  border-radius: 1rem;\r\n  font-size: 0.875rem;\r\n  font-weight: 500;\r\n  width: fit-content;\r\n}\r\n\r\n.status-badge.online {\r\n  background: #e8f5e9;\r\n  color: #4caf50;\r\n}\r\n\r\n.status-badge.offline {\r\n  background: #ffebee;\r\n  color: #f44336;\r\n}\r\n\r\n.stats-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2rem;\r\n}\r\n\r\n.period-stats h3 {\r\n  margin: 0 0 1rem 0;\r\n  color: #666;\r\n}\r\n\r\n.stats-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 1rem;\r\n}\r\n\r\n.stat-box {\r\n  padding: 1rem;\r\n  border-radius: 0.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.stat-box.online {\r\n  background: #e8f5e9;\r\n}\r\n\r\n.stat-box.offline {\r\n  background: #ffebee;\r\n}\r\n\r\n.stat-box label {\r\n  font-size: 0.875rem;\r\n  color: #666;\r\n}\r\n\r\n.stat-box span {\r\n  font-size: 1.25rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.date-range {\r\n  display: flex;\r\n  gap: 1rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.history-stats {\r\n  margin-top: 2rem;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}