{"ast":null,"code":"import { onMounted, computed } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'Dashboard',\n  setup() {\n    const store = useStore();\n    const devices = computed(() => store.state.devices);\n    const statistics = computed(() => store.state.statistics);\n    const loading = computed(() => store.state.loading);\n    const refreshData = async () => {\n      await store.dispatch('fetchDevices');\n      await store.dispatch('fetchStatistics');\n    };\n    onMounted(() => {\n      refreshData();\n    });\n    return {\n      devices,\n      statistics,\n      loading,\n      refreshData\n    };\n  }\n};","map":{"version":3,"names":["onMounted","computed","useStore","name","setup","store","devices","state","statistics","loading","refreshData","dispatch"],"sources":["C:\\Users\\user\\Desktop\\dastur\\hp\\monitoring\\frontend\\src\\views\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <!-- Statistika kartlari -->\r\n    <div class=\"stats-cards\">\r\n      <Card class=\"stats-card\">\r\n        <template #title>\r\n          <div class=\"card-title\">\r\n            <i class=\"pi pi-mobile\"></i>\r\n            Jami qurilmalar\r\n          </div>\r\n        </template>\r\n        <template #content>\r\n          <div class=\"stat-value\">{{ statistics?.total_devices || 0 }}</div>\r\n        </template>\r\n      </Card>\r\n\r\n      <Card class=\"stats-card online\">\r\n        <template #title>\r\n          <div class=\"card-title\">\r\n            <i class=\"pi pi-check-circle\"></i>\r\n            Online qurilmalar\r\n          </div>\r\n        </template>\r\n        <template #content>\r\n          <div class=\"stat-value\">{{ statistics?.online_devices || 0 }}</div>\r\n        </template>\r\n      </Card>\r\n\r\n      <Card class=\"stats-card offline\">\r\n        <template #title>\r\n          <div class=\"card-title\">\r\n            <i class=\"pi pi-times-circle\"></i>\r\n            Offline qurilmalar\r\n          </div>\r\n        </template>\r\n        <template #content>\r\n          <div class=\"stat-value\">{{ statistics?.offline_devices || 0 }}</div>\r\n        </template>\r\n      </Card>\r\n    </div>\r\n\r\n    <!-- Qurilmalar jadvali -->\r\n    <Card class=\"devices-table\">\r\n      <template #title>\r\n        <div class=\"table-header\">\r\n          <h2>Qurilmalar ro'yxati</h2>\r\n          <Button icon=\"pi pi-refresh\" @click=\"refreshData\" />\r\n        </div>\r\n      </template>\r\n      <template #content>\r\n        <DataTable \r\n          :value=\"devices\" \r\n          :paginator=\"true\" \r\n          :rows=\"10\"\r\n          responsiveLayout=\"scroll\"\r\n          class=\"p-datatable-sm\"\r\n          :loading=\"loading\"\r\n        >\r\n          <Column field=\"number\" header=\"Qurilma raqami\" sortable>\r\n            <template #body=\"slotProps\">\r\n              <router-link :to=\"'/device/' + slotProps.data.id\" class=\"device-link\">\r\n                {{ slotProps.data.number }}\r\n              </router-link>\r\n            </template>\r\n          </Column>\r\n          <Column field=\"description\" header=\"Tavsif\" sortable />\r\n          <Column field=\"online\" header=\"Holat\" sortable>\r\n            <template #body=\"slotProps\">\r\n              <span :class=\"['status-badge', slotProps.data.online ? 'online' : 'offline']\">\r\n                {{ slotProps.data.online ? 'Online' : 'Offline' }}\r\n              </span>\r\n            </template>\r\n          </Column>\r\n          <Column field=\"last_seen\" header=\"Oxirgi faollik\" sortable />\r\n          <Column header=\"Bugungi statistika\">\r\n            <template #body=\"slotProps\">\r\n              <div class=\"stats-info\" v-if=\"slotProps.data.today_stats\">\r\n                <div class=\"stat-item\">\r\n                  <i class=\"pi pi-clock\"></i>\r\n                  Online: {{ slotProps.data.today_stats.online_hours }}s\r\n                </div>\r\n                <div class=\"stat-item\">\r\n                  <i class=\"pi pi-power-off\"></i>\r\n                  Offline: {{ slotProps.data.today_stats.offline_hours }}s\r\n                </div>\r\n              </div>\r\n            </template>\r\n          </Column>\r\n        </DataTable>\r\n      </template>\r\n    </Card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { onMounted, computed } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nexport default {\r\n  name: 'Dashboard',\r\n  setup() {\r\n    const store = useStore()\r\n\r\n    const devices = computed(() => store.state.devices)\r\n    const statistics = computed(() => store.state.statistics)\r\n    const loading = computed(() => store.state.loading)\r\n\r\n    const refreshData = async () => {\r\n      await store.dispatch('fetchDevices')\r\n      await store.dispatch('fetchStatistics')\r\n    }\r\n\r\n    onMounted(() => {\r\n      refreshData()\r\n    })\r\n\r\n    return {\r\n      devices,\r\n      statistics,\r\n      loading,\r\n      refreshData\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2rem;\r\n}\r\n\r\n.stats-cards {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 1.5rem;\r\n}\r\n\r\n.stats-card {\r\n  background: white;\r\n  transition: transform 0.3s, box-shadow 0.3s;\r\n}\r\n\r\n.stats-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n.stats-card.online :deep(.p-card-content) {\r\n  color: #4caf50;\r\n}\r\n\r\n.stats-card.offline :deep(.p-card-content) {\r\n  color: #f44336;\r\n}\r\n\r\n.card-title {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  font-size: 1.1rem;\r\n  color: #666;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 2.5rem;\r\n  font-weight: bold;\r\n  text-align: center;\r\n}\r\n\r\n.table-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.device-link {\r\n  color: #2196F3;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n}\r\n\r\n.device-link:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.status-badge {\r\n  padding: 0.25rem 0.75rem;\r\n  border-radius: 1rem;\r\n  font-size: 0.875rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.status-badge.online {\r\n  background: #e8f5e9;\r\n  color: #4caf50;\r\n}\r\n\r\n.status-badge.offline {\r\n  background: #ffebee;\r\n  color: #f44336;\r\n}\r\n\r\n.stats-info {\r\n  display: flex;\r\n  gap: 1rem;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.stat-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.25rem;\r\n}\r\n\r\n.stat-item i {\r\n  font-size: 0.75rem;\r\n}\r\n</style>\r\n"],"mappings":"AA+FA,SAASA,SAAS,EAAEC,QAAO,QAAS,KAAI;AACxC,SAASC,QAAO,QAAS,MAAK;AAE9B,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,QAAQ,CAAC;IAEvB,MAAMI,OAAM,GAAIL,QAAQ,CAAC,MAAMI,KAAK,CAACE,KAAK,CAACD,OAAO;IAClD,MAAME,UAAS,GAAIP,QAAQ,CAAC,MAAMI,KAAK,CAACE,KAAK,CAACC,UAAU;IACxD,MAAMC,OAAM,GAAIR,QAAQ,CAAC,MAAMI,KAAK,CAACE,KAAK,CAACE,OAAO;IAElD,MAAMC,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,MAAML,KAAK,CAACM,QAAQ,CAAC,cAAc;MACnC,MAAMN,KAAK,CAACM,QAAQ,CAAC,iBAAiB;IACxC;IAEAX,SAAS,CAAC,MAAM;MACdU,WAAW,CAAC;IACd,CAAC;IAED,OAAO;MACLJ,OAAO;MACPE,UAAU;MACVC,OAAO;MACPC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}