{"version":3,"file":"js/736.2eccfbd9.js","mappings":"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","sources":["webpack://monitoring-frontend/./node_modules/@kurkle/color/dist/color.esm.js","webpack://monitoring-frontend/./node_modules/chart.js/dist/chunks/helpers.dataset.js","webpack://monitoring-frontend/./node_modules/chart.js/dist/chart.js","webpack://monitoring-frontend/./node_modules/chart.js/auto/auto.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _normalizeAngle as al, _readValueToProps as am, _updateBezierControlPoints as an, _computeSegments as ao, _boundSegments as ap, _steppedInterpolation as aq, _bezierInterpolation as ar, _pointInLine as as, _steppedLineTo as at, _bezierCurveTo as au, drawPoint as av, addRoundedRectPath as aw, toTRBL as ax, toTRBLCorners as ay, _boundSegment as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _normalizeAngle, am as _readValueToProps, an as _updateBezierControlPoints, ao as _computeSegments, ap as _boundSegments, aq as _steppedInterpolation, ar as _bezierInterpolation, as as _pointInLine, at as _steppedLineTo, au as _bezierCurveTo, av as drawPoint, aw as addRoundedRectPath, ax as toTRBL, ay as toTRBLCorners, az as _boundSegment, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getAxisCount() {\n        return this._getAxis().length;\n    }\n    getFirstScaleIdForIndexAxis() {\n        const scales = this.chart.scales;\n        const indexScaleId = this.chart.options.indexAxis;\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\n    }\n    _getAxis() {\n        const axis = {};\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n        for (const dataset of this.chart.data.datasets){\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\n        }\n        return Object.keys(axis);\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        const axisCount = this._getAxisCount();\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.5.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipSelf(ctx, element, endAngle) {\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n    if (innerRadius > 0) {\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n    } else {\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n        if (borderJoinStyle === 'round') {\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n        } else if (borderJoinStyle === 'bevel') {\n            const r = 2 * clipWidth * clipWidth;\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\n            ctx.lineTo(endX, endY);\n            ctx.lineTo(startX, startY);\n        }\n    }\n    ctx.closePath();\n    ctx.moveTo(0, 0);\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.clip('evenodd');\n}\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n        clipSelf(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true,\n        selfJoin: false\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    let fillColor = below;\n    if (below !== above) {\n        if (property === 'x') {\n            clipVertical(ctx, target, area.top);\n            fill(ctx, {\n                line,\n                target,\n                color: above,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipVertical(ctx, target, area.bottom);\n        } else if (property === 'y') {\n            clipHorizontal(ctx, target, area.left);\n            fill(ctx, {\n                line,\n                target,\n                color: below,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipHorizontal(ctx, target, area.right);\n            fillColor = above;\n        }\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: fillColor,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction clipHorizontal(ctx, target, clipX) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(clipX, firstPoint.y);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(clipX, lastPoint.y);\n        }\n    }\n    ctx.lineTo(clipX, target.first().y);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNonPrimitive","Symbol","toPrimitive","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetArea","getDatasetClipArea","_clip","disabled","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","convertObjectDataToArray","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getAxisCount","_getAxis","getFirstScaleIdForIndexAxis","indexScaleId","firstScaleAxisId","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","axisCount","axisID","axisNumber","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipSelf","outerAngleClip","innerAngleClip","clipWidth","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","selfJoin","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","containsDefaultColorsDefenitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","fillColor","clipVertical","clipHorizontal","clipY","lineLoop","clipX","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","xSet","xAverage","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sourceRoot":""}